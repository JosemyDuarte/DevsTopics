webpack:
  webpackConfig: ./webpack.config.js
  #includeModules: true
  includeModules:
    forceExclude:
      - aws-sdk
tables:
  posts:
    name: "${self:provider.stage}-posts"
    indexes:
      publishedAtAndSite: "published_at_site_index"
dynamodb:
  stages:
    - development
  start:
    port: 8000
    migrate: true
    seed: true
  endpoint:
    development:
      http://127.0.0.1:8000
serverless-offline-sns:
  port: 4002
  debug: true
snsHostURL:
  development:
    http://127.0.0.1:4002
newPostCandidateToPublishTopic: "newPostCandidateToPublish-${self:provider.stage}-sns"
newPostCandidateToPublishTopicArn:
  development:
    "arn:aws:sns:eu-west-1:123456789012:${self:custom.newPostCandidateToPublishTopic}"
  qa:
    { "Fn::Join": ["", ["arn:aws:sns:${self:provider.region}:", { "Ref": "AWS::AccountId" }, ":${self:custom.newPostCandidateToPublishTopic}" ] ]  }
  prod:
    { "Fn::Join": ["", ["arn:aws:sns:${self:provider.region}:", { "Ref": "AWS::AccountId" }, ":${self:custom.newPostCandidateToPublishTopic}" ] ]  }
newPostsFoundSnsTopic: "newPostFound-${self:provider.stage}-sns"
newPostsFoundSnsTopicArn:
  development:
    "arn:aws:sns:eu-west-1:123456789012:${self:custom.newPostsFoundSnsTopic}"
  qa:
    { "Fn::Join": ["", ["arn:aws:sns:${self:provider.region}:", { "Ref": "AWS::AccountId" }, ":${self:custom.newPostsFoundSnsTopic}" ] ]  }
  prod:
    { "Fn::Join": ["", ["arn:aws:sns:${self:provider.region}:", { "Ref": "AWS::AccountId" }, ":${self:custom.newPostsFoundSnsTopic}" ] ]  }
serverless-iam-roles-per-function:
  defaultInherit: true # Each function will inherit the service level roles too.
prune:
  automatic: true
  number: 3

TELEGRAM_CHANNEL_ID: "REPLACE"
TELEGRAM_BOT_TOKEN: "REPLACE"
TWITTER_APP_API_KEY: "REPLACE"
TWITTER_APP_API_SECRET: "REPLACE"
TWITTER_APP_ACCESS_TOKEN_KEY: "REPLACE"
TWITTER_APP_ACCESS_TOKEN_SECRET: "REPLACE"
